1、异或运算 ^:可以理解为无进位相加
    （1）0^N=N，N^N=0
    （2）满足交换律和结合律
    （3）一堆数字和一个数异或，和一个一个的与之异或结果都一样
    （4）不用额外变量交换两个数
    （4）交换两个数
        int a=17;
        int b=23;
        a=a^b;
        b=a^b;
        a=a^b;
    在一个数组中，只有一种数出现了奇数次，其他数都出现了偶数次，求出出现奇数次的数字
    在一个数组中，有两种数出现了奇数次，其他数都出现了偶数次，怎么找到这两个数

2、二分的详解与扩展
    （1）在一个有序数组中找到一个数是否存在
    （2）在一个有序数组中找到>=某个数最左侧的位置
    （3）局部最小值

3、对数器的概念和使用
    （1）有一个你想要测的方法a
    （2）实现复杂度不好但是容易实现的方法b
    （3）实现一个随机样本产生器
    （4）把方法a和方法b跑相同的随机样本，看看得到的结果是否一样
    （5）如果有一个随机样本使得比对结果不一致，打印样本进行人工干预，改对方法a或方法b
    （6）当样本数量很多时比对测试依然正确，可以确定方法a已经正确

4、剖析递归行为和递归行为时间复杂度的估算
    （1）用递归求一个数组中的最大值，系统上到底是怎么做的
    （2）master公式的使用:一个满足子问题等规模的递归行为
        T(N)=a*T(N/b)+O(N^d);
            log(b,a)>d -> 复杂度为：O(N^log(b,a))
            log(b,a)=d -> 复杂度为：O(N^d*logN)
            log(b,a)<d -> 复杂度为：O(N^d)

5、归并排序的扩展
    （1）小和问题和逆序对问题
        小和问题：在一个数组中，每一个数左边比当前数小的数累加起来，叫做这个数的小和
    （2）逆序对问题：在一个数组中，如果左边的数比右边的数大，则这两个数构成一个逆序对，请打印所有逆序对

6、荷兰国旗问题
    （1）给定一个数组arr，和一个数num，请把小于等于num的数放在数组的左边，大于num的数放在数组的右边，要
    求额外空间复杂度O(1)，时间复杂度O(N)
    （2）给定有个数组arr，和一个数num，请把小于num的数放在数组的左边，等于num的数放在数组的中间，大于num
    的数放在数组的右边，要求额外空间复杂度为O(1)，时间复杂度为O(N)

7、股票（一次交易）
    假如你有一个数组，其中第i个元素是股票在第i天的价格，你又一次买入和卖出的机会（只有买入了股票以后才能卖出）
请你设计出一个算法来计算出最大收益。

8、反转字符串
    接受一个字符串，然后输出该字符串反转之后的字符串。

    修改

